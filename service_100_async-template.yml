AWSTemplateFormatVersion: '2010-09-09'
Description: Deploy service service_100_async on AWS Fargate, hosted in a private
  subnet, but accessible via a public balancer
Parameters:
  StackName:
    Type: String
    Default: service-100-async-stack
    Description: A name for the stack
  ServiceName:
    Type: String
    Default: service100async
    Description: A name for the service
  ImageUrl:
    Type: String
    Default: 288687564189.dkr.ecr.eu-west-2.amazonaws.com/doa-composition:service_100_async
    Description: The url of a docker image that contains the application process that
      will handle the traffic for this service
  ContainerPort:
    Type: Number
    Default: 5000
    Description: What port number the application inside the docker container is binding
      to
  ContainerCpu:
    Type: Number
    Default: 256
    Description: How much CPU to give the container. 1024 is 1 CPU
  ContainerMemory:
    Type: Number
    Default: 512
    Description: How much memory in megabytes to give the container
  Path:
    Type: String
    Default: /doa_composition/service_100_async
    Description: A path on the public load balancer that this service should be connected
      to. Use * to send all load balancer traffic to this service.
  Priority:
    Type: Number
    Default: 100
    Description: The priority for the routing rule added to the load balancer. This
      only applies if your have multiple services which have been assigned to different
      paths on the load balancer.
  DesiredCount:
    Type: Number
    Default: 1
    Description: How many copies of the service task to run
  Role:
    Type: String
    Default: ''
    Description: (Optional) An IAM role to give the service's containers if the code
      within needs to access other AWS resources like S3 buckets, DynamoDB tables,
      etc
Resources:
  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Ref 'ServiceName'
      Cpu: !Ref 'ContainerCpu'
      Memory: !Ref 'ContainerMemory'
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      ExecutionRoleArn: !ImportValue
        Fn::Join:
          - ':'
          - - doa-resources
            - ECSTaskExecutionRole
      ContainerDefinitions:
        - Name: !Ref 'ServiceName'
          Cpu: !Ref 'ContainerCpu'
          Memory: !Ref 'ContainerMemory'
          Image: !Ref 'ImageUrl'
          PortMappings:
            - ContainerPort: !Ref 'ContainerPort'
  Service:
    Type: AWS::ECS::Service
    DependsOn: LoadBalancerRule
    Properties:
      ServiceName: !Ref 'ServiceName'
      Cluster: !ImportValue
        Fn::Join:
          - ':'
          - - doa-resources
            - ClusterName
      LaunchType: FARGATE
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 75
      DesiredCount: !Ref 'DesiredCount'
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
            - !ImportValue
              Fn::Join:
                - ':'
                - - doa-resources
                  - FargateContainerSecurityGroup
          Subnets:
            - !ImportValue
              Fn::Join:
                - ':'
                - - doa-resources
                  - PublicSubnetOne
            - !ImportValue
              Fn::Join:
                - ':'
                - - doa-resources
                  - PublicSubnetTwo
      TaskDefinition: !Ref 'TaskDefinition'
      LoadBalancers:
        - ContainerName: !Ref 'ServiceName'
          ContainerPort: !Ref 'ContainerPort'
          TargetGroupArn: !Ref 'TargetGroup'
  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 6
      HealthCheckPath: !Ref 'Path'
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      TargetType: ip
      Name: !Ref 'ServiceName'
      Port: !Ref 'ContainerPort'
      Protocol: HTTP
      UnhealthyThresholdCount: 2
      VpcId: !ImportValue
        Fn::Join:
          - ':'
          - - doa-resources
            - VPCId
  LoadBalancerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - TargetGroupArn: !Ref 'TargetGroup'
          Type: forward
      Conditions:
        - Field: path-pattern
          Values:
            - !Ref 'Path'
      ListenerArn: !ImportValue
        Fn::Join:
          - ':'
          - - doa-resources
            - PublicListener
      Priority: !Ref 'Priority'
